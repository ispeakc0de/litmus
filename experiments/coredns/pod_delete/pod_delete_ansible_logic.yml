---
- hosts: localhost
  connection: local

  vars:
    c_experiment: "coredns-pod-delete"
    c_duration: "{{ lookup('env','TOTAL_CHAOS_DURATION') }}"
    c_interval: "{{ lookup('env','CHAOS_INTERVAL') }}"
    c_force: "{{ lookup('env','FORCE') }}"
    c_lib: "{{ lookup('env','LIB') }}"
    c_ns: "{{ lookup('env','CHAOS_NAMESPACE') }}"
    a_ns: "{{ lookup('env','APP_NAMESPACE') }}"
    a_label: "{{ lookup('env','APP_LABEL') }}"
    a_kind: "{{ lookup('env','APP_KIND') }}"
    kill_count: "{{ lookup('env','KILL_COUNT') }}"

  tasks:
    - block:

        - include: pod_delete_ansible_prerequisites.yml
      
        - include_vars:
            file: chaosutil.yml

        ## GENERATE EXP RESULT NAME
        - block:
            - name: Construct chaos result name (experiment_name)
              set_fact:
                c_experiment: "{{ lookup('env','CHAOSENGINE') }}-{{ c_experiment }}"

          when: lookup('env','CHAOSENGINE')    

        ## RECORD START-OF-EXPERIMENT IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'SOT'
            namespace: "{{ c_ns }}"
        
        ## Provision services and pods for the chaos injection
        - name: Provision nginx pod and liveness pod
          block:
            - template:
                src: nginx.j2
                dest: nginx.yml
            
            - template:
                src: liveness-app.j2
                dest: liveness-app.yml
              
            - name: Deploying and exposing nginx pod
              shell: kubectl apply -f nginx.yml
              register: nginx_deploy

            - name: Deploying liveness pod 
              shell: kubectl apply -f liveness-app.yml
              register: liveness_app_deploy

        ## PRE-CHAOS APPLICATION LIVENESS CHECK
        - name: Pre-chaos application liveness check
          block:
            - name: Verify that the AUT (Application Under Test- coredns app) is running 
              include_tasks: "/utils/common/status_app_pod.yml"
              vars:
                app_ns: "{{ a_ns }}"
                app_label: "{{ a_label }}"     
                delay: 1
                retries: 60

            - name: Verify that the AUT (Application Under Test- liveness app) is running 
              include_tasks: "/utils/common/status_app_pod.yml"
              vars:     
                delay: 1
                retries: 60
                app_ns: "{{ c_ns }}"
                app_label: "run=liveness-app"
  
        ## FAULT INJECTION 
        - include_tasks: "{{ c_util }}"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"
          
        ## POST-CHAOS APPLICATION LIVENESS CHECK
        - name: Post-chaos application liveness check
          block:
            - name: Verify that the AUT (Application Under Test- coredns app) is running 
              include_tasks: "/utils/common/status_app_pod.yml"
              vars: 
                app_ns: "{{ a_ns }}"
                app_label: "{{ a_label }}"     
                delay: 1
                retries: 60

            - name: Verify that the AUT (Application Under Test- liveness app) is running 
              include_tasks: "/utils/common/status_app_pod.yml"
              vars:     
                delay: 1
                retries: 60
                app_ns: "{{ c_ns }}"
                app_label: "run=liveness-app"

        ## DEPROVISIONING TASK
        - name: Cleaning up chaos pods and services
          block: 
            - name: deleting service and pod of nginx
              shell: kubectl delete -f nginx.yml
            
            - name: deleting liveness pod 
              shell: kubectl delete -f liveness-app.yml

        - set_fact:
            flag: "pass"

      rescue:
        - set_fact: 
            flag: "fail"

        - block:
            - name: deleting service and pod of nginx
              shell: kubectl delete -f nginx.yml
              when: "nginx_deploy.rc == 0"
          when: "nginx_deploy is defined"  
        
        - block:
            - name: deleting liveness pod 
              shell: kubectl delete -f liveness-app.yml
              when: "liveness_app_deploy.rc == 0"
          when: "liveness_app_deploy is defined"

      always:
 
        ## RECORD END-OF-TEST IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'EOT'
            namespace: "{{ c_ns }}"