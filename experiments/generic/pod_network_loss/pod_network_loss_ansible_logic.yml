---
- hosts: localhost
  connection: local

  vars:
    c_experiment: "pod-network-loss"
    c_duration: "{{ lookup('env','TOTAL_CHAOS_DURATION') }}"
    c_container: "{{ lookup('env','TARGET_CONTAINER') }}"
    n_packet_loss: "{{ lookup('env','NETWORK_PACKET_LOSS_PERCENTAGE') }}"
    n_interface: "{{ lookup('env','NETWORK_INTERFACE') }}"
    c_lib: "{{ lookup('env','LIB') }}"
    a_ns: "{{ lookup('env','APP_NAMESPACE') }}"
    a_label: "{{ lookup('env','APP_LABEL') }}"
    a_kind: "{{ lookup('env','APP_KIND') }}"
    lib_image: "{{ lookup('env','LIB_IMAGE') }}"

  tasks:
    - block:

        ## DETERMINE THE CHAOSLIB TASKFILES TO BE USED
        - include: pod_network_loss_ansible_prerequisites.yml

        - include_vars:
            file: chaosutil.yml

        ## GENERATE EXP RESULT NAME
        - block: 
            - name: Construct chaos result name (experiment_name)
              set_fact: 
                c_experiment: "{{ lookup('env','CHAOSENGINE') }}-{{ c_experiment }}"
          when: lookup('env','CHAOSENGINE')

        ## RECORD START-OF-EXPERIMENT IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars: 
            status: 'SOT'
            namespace: "{{ a_ns }}"

        ## PRE-CHAOS APPLICATION LIVENESS CHECK
        - name: Verify that the AUT (Application Under Test) is running 
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"       
            delay: 1
            retries: 60

        ## FAULT INJECTION 
        - include_tasks: "{{ c_util }}"
          vars:
            app_ns: "{{ a_ns }}"

        ## POST-CHAOS APPLICATION LIVENESS CHECK
        - name: Verify AUT liveness post fault-injection
          include_tasks: "/utils/common/status_app_pod.yml"
          vars:
            app_ns: "{{ a_ns }}"
            app_label: "{{ a_label }}"     
            delay: 1
            retries: 60        


        - set_fact:
            flag: "pass"

    
      rescue: 
        - set_fact: 
            flag: "fail"
      
      always: 

        ## RECORD END-OF-TEST IN LITMUSCHAOS RESULT CR
        - include_tasks: /utils/runtime/update_chaos_result_resource.yml
          vars:
            status: 'EOT'
            namespace: "{{ a_ns }}"  
